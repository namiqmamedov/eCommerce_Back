@model PagiNationList<Product>

@{
    if (Model.Count > 0)
    {
        @if (ViewBag.SearchTerm != null)
        {
            <div class="search-info mt-5">
                <p style="font-size: 16px;">@(Model.Count * Model.TotalPages) results for <span style="font-weight: bold;">"@ViewBag.SearchTerm"</span></p>
            </div>
        }
        <div class="product-wrapper">
            @foreach (Product item in Model)
            {
                <div class="item-wrapper">
                    @await Component.InvokeAsync("Product", item)
                </div>
            }
        </div>
        <div class="pagination-main">
            <p class="pagination-info">
                Showing<span>

                    @if (Model.PageIndex == 1)
                    {
                        @(Model.Start)
                    }
                    @if(Model.HasNext && Model.PageIndex != 1)
                    {
                        @(Model.TotalItems * Model.PageIndex - 12)
                    }
                    @if(!Model.HasNext && Model.HasPrev)
                    {
                        int totalCount = ViewBag.Products.Count - Model.TotalItems;
                        @totalCount
                    }
                    -
                    @if(!Model.HasNext && Model.PageIndex != 1)
                    {
                        int totalCount = ViewBag.Products.Count;
                        @totalCount
                    }
                    else
                    {
                        @(Model.TotalItems * Model.PageIndex)
                    }
                    of
                    @if (ViewBag.Products != null && Model.HasNext || Model.HasPrev) 
                    {
                        int totalCount = ViewBag.Products.Count;
                        @totalCount
                    }
                    else
                    {
                        @(Model.TotalItems * Model.PageIndex)
                    }
                </span>
            </p>
            <ul class="pagination">
                @if (Model.HasPrev)
                {
                    <li class="prev">
                        <a class="page-link" asp-controller="shop" asp-action="index" asp-route-page="@(Model.PageIndex-1)" data-page="@(Model.PageIndex-1)">
                            <i class="fa-solid fa-arrow-left-long mr-3"></i>
                            Prev
                        </a>
                    </li>
                }

                @for (int i = Model.Start; i <= Model.End; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" :"")">
                        <a class="page-link" asp-controller="shop" asp-action="index" asp-route-page="@i" data-page="@i">@i</a>
                    </li>
                }
                @if (Model.HasNext)
                {
                    <li class="next">
                        <a class="page-link" asp-controller="shop" asp-action="index" asp-route-page="@(Model.PageIndex+1)" data-page="@(Model.PageIndex+1)">
                            Next
                            <i class="fa-solid fa-arrow-right-long ml-3"></i>
                        </a>
                    </li>
                }
            </ul>
        </div>
    }
    else
    {
        <div class="mt-3">
            <p class="font-weight-bold" style="font-size: 32px;">Not found.</p>
            <p style="font-size: 16px;">Sorry, but nothing matched your search terms. Please try again with some different keywords.</p>
        </div>
    }
}